Approach-1
long long countSubarrays(vector<int>& nums, int k) {
        int i = 0;
        int j = 0;
        long long ans = 0;
        int countMax = 0;
        int maxEle = *max_element(begin(nums),end(nums));

        while(j < nums.size()){
            if(nums[j] == maxEle){
                countMax++;
            }
            while(countMax >= k){
                ans += nums.size() - j;
                if(nums[i] == maxEle){
                    countMax--;
                }
                i++;
            }
            j++;
        }
        return ans;
    }

Approach-2
long long countSubarrays(vector<int>& nums, int k) {
        int maxEle = *max_element(begin(nums),end(nums));

        long long ans = 0;
        vector<int>indices;

        for(int i=0;i<nums.size();i++){
            if(nums[i] == maxEle){
                indices.push_back(i);
            }
            
            if(indices.size() >= k){
                int last_index = indices[indices.size()-k];
                ans += (last_index + 1);
            }
        }
        return ans;
    }
